(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e,n,o,r,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=n.name,this._link=n.link,this._likes=n.likes,this._cardElementsSelectors=e,this._handleCardClick=o,this._handleConfirmDeleteClick=r,this._handleLikeClick=i,this._cardId=n._id,this._cardElement=n.cardElement,this._ownerId=a._id,this._userId=n.owner._id}var n,o;return n=t,(o=[{key:"_getTemplate",value:function(){return this._element=document.querySelector(this._cardElementsSelectors.template).content.querySelector(this._cardElementsSelectors.card).cloneNode(!0),this._element}},{key:"generateCard",value:function(){return this._getTemplate(),this._elementName=this._element.querySelector(this._cardElementsSelectors.name),this._elementImg=this._element.querySelector(this._cardElementsSelectors.cardImg),this._likeCountElement=this._element.querySelector(this._cardElementsSelectors.numLike),this._likeCountElement.textContent=this._likes.length,this._elementName.textContent=this._name,this._elementImg.alt=this._name,this._elementImg.src=this._link,this._setEventListeners(),this._renderActiveLikes(),this._renderActiveDelIco(),this._element}},{key:"_renderActiveDelIco",value:function(){this._ownerId!==this._userId&&(this._buttonDeleteCard.style.display="none")}},{key:"_initialActiveLikes",value:function(){var e=this;return this._likes.find((function(t){return t._id===e._ownerId}))}},{key:"_likeActive",value:function(){this._likeButton.classList.add(this._cardElementsSelectors.likeActive)}},{key:"_renderActiveLikes",value:function(){var e=this;this._likes.find((function(t){return t._id===e._ownerId}))&&this._likeActive()}},{key:"_handleLikeCard",value:function(){this._initialActiveLikes()?this._handleLikeClick(!0,this._likes,this._cardId,this._likeButton,this._cardElementsSelectors.likeActive,this._likeCountElement):this._initialActiveLikes()||this._handleLikeClick(!1,this._likes,this._cardId,this._likeButton,this._cardElementsSelectors.likeActive,this._likeCountElement)}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton=this._element.querySelector(this._cardElementsSelectors.likeButton),this._likeButton.addEventListener("click",(function(){return e._handleLikeCard()})),this._buttonDeleteCard=this._element.querySelector(this._cardElementsSelectors.buttonDeleteCard),this._buttonDeleteCard.addEventListener("click",(function(){e._handleConfirmDeleteClick.open(e._cardId,e._element)})),this._elementImg.addEventListener("click",(function(){return e._openPopupImg()}))}},{key:"_openPopupImg",value:function(){this._handleCardClick(this._name,this._link)}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationConfig=t,this._placeForm=n,this._buttonElement=this._placeForm.querySelector(this._validationConfig.submitButtonSelector),this._inputList=Array.from(this._placeForm.querySelectorAll(this._validationConfig.inputSelector))}var t,o;return t=e,(o=[{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._placeForm.querySelector(".".concat(e.id,"-error"));e.classList.add(this._validationConfig.inputErrorClass),n.textContent=t,n.classList.add(this._validationConfig.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._placeForm.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationConfig.inputErrorClass),t.classList.remove(this._validationConfig.errorClass),t.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListenersInput",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"resetValid",value:function(){var e=this;this._disableSubmitButton(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._setEventListenersInput()}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function r(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._form=this._popup.querySelector(n.form),this._selectors=n,this._handleEscClose=this._handleEscClose.bind(this),this._popupSaveButton=this._popup.querySelector(this._selectors.popupSaveButton)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add(this._selectors.active)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove(this._selectors.active)}},{key:"activateLoader",value:function(e,t){e?(this._popupSaveButton.disabled=!0,this._popupSaveButton.textContent=t,this._popupSaveButton.classList.add(this._selectors.popupSaveButtonInactive)):(this._popupSaveButton.disabled=!1,this._popupSaveButton.textContent=this._popupSaveButton.value,this._popupSaveButton.classList.remove(this._selectors.popupSaveButtonInactive))}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){var n=e._popup.querySelector(e._selectors.containerClose);!t.target.classList.contains(e._selectors.closeButton)&&n.contains(t.target)||e.close()}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=s(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},c.apply(this,arguments)}function s(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}function p(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&l(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(o);if(r){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e,t,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(o=i.call(this,e,t))._handleSumbitForm=n,o._inputList=Array.from(o._form.querySelectorAll(t.input)),o}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputList.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;c(f(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSumbitForm(e._getInputValues())}))}},{key:"close",value:function(){this._form.reset(),c(f(a.prototype),"close",this).call(this)}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function d(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=v(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},y.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function b(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(o);if(r){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e,t))._zoomMainImg=n._popup.querySelector(n._selectors.zoomMainImg),n._zoomCaption=n._popup.querySelector(n._selectors.zoomCaption),n}return t=a,(n=[{key:"open",value:function(e,t){this._zoomMainImg.src=t,this._zoomMainImg.alt=e,this._zoomCaption.textContent=e,y(k(a.prototype),"open",this).call(this)}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function C(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=w(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},S.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function O(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(o);if(r){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e,t,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(o=i.call(this,e,t))._handleDeleteCard=n,o}return t=a,(n=[{key:"open",value:function(e,t){S(I(a.prototype),"open",this).call(this),this._cardId=e,this._cardElement=t}},{key:"setEventListeners",value:function(){var e=this;S(I(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleDeleteCard(e._cardId,e._cardElement)}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function j(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var B=function(){function e(t,n){var o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"rendererAll",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var q=function(){function e(t){var n=t.name,o=t.about,r=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(o),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){var e={};return e.name=this._name.textContent,e.about=this._about.textContent,e.avatar=this._avatar.src,e._id=this._id,e}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar,this._id=e._id}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var T=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(this._chechResponse)}},{key:"getInfoProfile",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(this._chechResponse)}},{key:"editProfile",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._chechResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._chechResponse)}},{key:"delCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._chechResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._chechResponse)}},{key:"delLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._chechResponse)}},{key:"changeAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._chechResponse)}},{key:"_chechResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active",popupContainer:"popup__container"},x={template:".card",card:".element",name:".element__name",likeButton:".element__like",buttonDeleteCard:".element__delete-ico",cardImg:".element__photo",likeActive:"element__like_active",numLike:".element__numLike"},V={active:"popup_active",containerClose:".popup__container-close",container:".popup__container",closeButton:"popup__close-ico",zoomMainImg:".popup__zoom-main-img",zoomCaption:".popup__zoom-caption",popupAddCard:".popup_type_add-card",form:".popup__form",input:".popup__input",popupZoomImgContainer:".popup_type_zoom-img",popupEditName:".popup_type_edit-name",nameInput:".popup__input_value_username",jobInput:".popup__input_value_about-user",popupConfirm:".popup_type_askDel",popupSaveButton:".popup__save-button",popupSaveButtonInactive:".popup__save-button_inactive",popupAvatar:".popup_type_updateAvatar"},z=document.querySelector(".edit-button"),U=document.querySelector(".add-button"),N=document.querySelector(".popup_type_updateAvatar").querySelector(".popup__form_type_updateAvatar"),F=document.querySelector(".popup_type_edit-name").querySelector(".popup__form_type_edit-name"),M=document.querySelector(".popup__form_type_add-card"),J=(M.querySelector(".popup__input_value_place-name"),M.querySelector(".popup__input_value_place-link"),document.querySelector(".profile").querySelector(".profile__photo")),H=new T({url:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"bd61842b-8e5a-461e-8e0d-4a18541609f7","Content-Type":"application/json"}});H.getInfoProfile().then((function(e){$.setUserInfo(e)})),H.getAllCards().then((function(e){te.rendererAll(e.reverse())}));var Z=new o(D,M);Z.enableValidation();var G=new o(D,F);G.enableValidation();var K=new o(D,N);K.enableValidation();var Q=new g(V.popupZoomImgContainer,V);Q.setEventListeners();var W=new h(V.popupAddCard,V,(function(e){W.activateLoader(!0,"Создание..."),H.addCard(e).then((function(e){return te.addItem(ne(e))})).then((function(){return W.close()})).finally((function(){return W.activateLoader(!1)}))}));W.setEventListeners();var X=new h(V.popupEditName,V,(function(e){X.activateLoader(!0,"Сохранение..."),H.editProfile(e).then((function(e){return $.setUserInfo(e)})).then((function(){return X.close()})).catch((function(e){return console.log(e)})).finally((function(){return X.activateLoader(!1)}))}));X.setEventListeners();var Y=new h(V.popupAvatar,V,(function(){Y.activateLoader(!0,"Сохранение..."),H.changeAvatar(Y._getInputValues()).then((function(e){return $.setUserInfo(e)})).then((function(){return Y.close()})).finally((function(){return Y.activateLoader(!1)}))}));Y.setEventListeners();var $=new q({name:".profile__user-name",about:".profile__about-user",avatar:".profile__photo"}),ee=new P(V.popupConfirm,V,(function(e,t){H.delCard(e,t).then((function(){return t.remove()})).then((function(){return ee.close()})).catch((function(e){return console.log(e)}))}));ee.setEventListeners();var te=new B({dataBase:[],renderer:function(e){te.addItem(ne(e))}},".elements");function ne(e){return new t(x,e,re,ee,oe,$.getUserInfo()).generateCard()}function oe(e,t,n,o,r,i){var a=$.getUserInfo();e?H.delLike(n,a).then((function(e){o.classList.remove(r),i.textContent=e.likes.length,t.pop(a)})).catch((function(e){return console.log(e)})):H.addLike(n,a).then((function(e){o.classList.add(r),i.textContent=e.likes.length,t.push(a)})).catch((function(e){return console.log(e)}))}function re(e,t){Q.open(e,t)}U.addEventListener("click",(function(){Z.resetValid(),W.open()})),J.addEventListener("click",(function(){K.resetValid(),Y.open()})),z.addEventListener("click",(function(){X.open(),G.resetValid(),X.setInputValues($.getUserInfo())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,